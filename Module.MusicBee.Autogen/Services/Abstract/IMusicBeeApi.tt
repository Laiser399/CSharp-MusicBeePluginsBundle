<#@ template language="C#" #>
<#@ assembly name="$(SolutionDir)\Module.MusicBee.MetaInfo\bin\Debug\Module.MusicBee.MetaInfo.dll"#>
<#@ assembly name="$(SolutionDir)\Root\bin\Debug\Root.dll"#>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Module.MusicBee.MetaInfo.Entities" #>
<#@ import namespace="Module.MusicBee.MetaInfo.Extensions" #>
<#@ import namespace="Module.MusicBee.MetaInfo.Helpers" #>
<#@ import namespace="Root.Extensions" #>
<#
    var methods = MetaInfoProvider.GetExtendedMethods();
#>
//-------------------------
// Autogenerated using t4 |
//-------------------------

using System;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;
using Module.MusicBee.Enums;
using Module.MusicBee.Services.Abstract;

namespace Module.MusicBee.Autogen.Services.Abstract
{
    public interface IMusicBeeApi : IBaseMusicBeeApi
    {
<#
    foreach (var method in methods)
    {
        var argumentsPart = GetArgumentsPart(method);
#>
        <#= method.ReturnParameter.Type.GetFixedName() #> <#= method.Name #>(<#= argumentsPart #>);
<#
    }
#>
    }
}
<#+
    private static string GetArgumentsPart(MethodDefinition method)
    {
        var inParams = method.InputParameters
            .Select(x => $"{x.GetCSharpTypeName()} {x.Name}");
        var outParams = method.OutputParameters
            .Select(x => $"out {x.GetCSharpTypeName()} {x.Name}");
        return string.Join(", ", inParams.Concat(outParams));
    }
#>